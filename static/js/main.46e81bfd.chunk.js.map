{"version":3,"sources":["components/UI/index.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Board/CreateNewBoard/CreateNewBoard.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","containers/Login/Login.module.css","components/UI/Input/Input.module.css","components/UI/Button/Button.module.css","components/UI/Card/Card.module.css","components/Board/Comments/Comments.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/FormRow/FormRow.module.css","containers/Dashboard/Dasboard.module.css","components/UI/Modal/Modal.module.css","components/NotFound/NotFound.module.css","containers/Board/Board.module.css","hoc/AuxComp/AuxComp.js","services/i18.services.js","components/Logo/Logo.js","services/util.js","services/userService/userModal.js","services/userService/loginService.js","services/constants.js","services/boardService/boardModal.js","services/boardService/taskModal.js","services/boardService/commentModal.js","services/boardService/boardService.js","store/actions/actionCreators.js","store/actions/actionTypes.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","privateRoute.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/FormRow/FormRow.js","containers/Login/Login.js","utils/utils.js","components/UI/Modal/Modal.js","components/Board/CreateNewBoard/CreateNewBoard.js","components/UI/Card/Card.js","containers/Dashboard/Boards/Boards.js","containers/Dashboard/Dashboard.js","components/NotFound/NotFound.js","components/Board/Comments/Comments.js","components/UI/Select/Select.js","containers/TaskContent/TaskContent.js","containers/Board/Tasks/Tasks.js","containers/Board/Board.js","App.js","store/reducers.js","index.js"],"names":["module","exports","aux","props","children","i18","NOT_FOUND","logoText","signinPlaceholder","signInText","guestLogin","noBoards","createNewBoard","loading","titleLable","create","description","cancel","viewBoard","viewTask","noTasks","createNewTask","comments","status","writeComment","postComment","close","filterTasks","notFoundInSelectedFilter","logo","className","classes","Logo","getUUID","preStr","dt","Date","getTime","replace","c","r","Math","random","floor","toString","__setUpdate","key","val","data","localStorage","getItem","JSON","parse","push","setItem","stringify","getCreatedAt","returnData","errMsg","ret","getDataByFieldName","fieldName","fieldValue","filter","item","createUser","name","email","user","Object","id","createdAt","lastModified","setLoginInfoInLocalStorage","expiresIn","getUserByName","userData","length","createNewUser","createBoard","title","createdBy","board","createTask","boardId","task","createCommnet","taskId","text","comment","getBoardsMapByUserId","userId","boards","boardMap","forEach","getTasksByBoardId","tasks","callAPI","i","commentCount","getTaskList","getTaskByTaskId","getCommentsByTaskId","map","userInfo","getUserById","getBoards","dispatch","response","getBoardByUserId","setDashboard","type","getTasks","setTasks","getTaskWithComments","getTaskContent","setTaskContent","createComment","createNewComment","updateTaskStatus","updateTaskStatusService","authSuccess","userName","logout","cb","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","loginResponse","success","login","connect","state","actionCreators","history","useHistory","NavigationItem","href","link","onClick","e","preventDefault","window","location","reload","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","component","authData","rest","render","to","pathname","Input","onChangeHandeler","classNames","value","placeholder","inputStyle","inputStyleDefault","React","useState","inputValue","setInputValue","event","target","onChange","button","btnType","disabled","style","Button","formRow","FormRow","authError","onAuth","isLoggedIn","expirationDate","setName","isDisabled","useEffect","Main","SignInText","onSubmit","cn","args","getStatus","num","Modal","nextProps","nextState","modalClosed","transform","opacity","CreateNewBoard","setTitle","setDescription","NewBoard","heading","InputContainer","d","PullRight","MarginLSM","card","Card","Container","keys","LinkStyle","boardData","modalState","setModalState","changeModalState","inlineBlock","marginNone","s","Dashboard","Boards","NotFound","Comments","Comment","Select","options","taskContent","cancle","commentText","setComment","taskStatus","selectvalue","setSelectValue","MarginBSM","Tasks","filterValue","setTaskId","filteredTasks","CardFooter","clickHandeler","match","params","filter_params","unshift","MarginLMD","Board","App","exact","path","Login","initialState","error","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.46e81bfd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inlineBlock\":\"UI_inlineBlock__1Gy-6\",\"PullRight\":\"UI_PullRight__2-Mv2\",\"MarginNone\":\"UI_MarginNone__2u8Bj\",\"MarginLSM\":\"UI_MarginLSM__3eGSv\",\"LinkStyle\":\"UI_LinkStyle__1gSyx\",\"CardFooter\":\"UI_CardFooter__Ob4Pn\",\"MarginBSM\":\"UI_MarginBSM__1mz_v\",\"MarginLMD\":\"UI_MarginLMD__rvH3G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewBoard\":\"CreateNewBoard_NewBoard__3WyGk\",\"InputContainer\":\"CreateNewBoard_InputContainer__1P77d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Login_Main__28eWZ\",\"SignInText\":\"Login_SignInText__3L1Md\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputStyle\":\"Input_inputStyle__10vuk\",\"inputStyleFlat\":\"Input_inputStyleFlat__WbgiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\",\"Rounded\":\"Button_Rounded__1ILJD\",\"AutoWidth\":\"Button_AutoWidth__2Yb9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1oeUq\",\"Container\":\"Card_Container__o0NyY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"Comments_userInfo__3L88p\",\"Comments\":\"Comments_Comments__3a3lI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormRow\":\"FormRow_FormRow__1T75c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dasboard_Dashboard__25w5Z\",\"inlineBlock\":\"Dasboard_inlineBlock__2nSej\",\"PullRight\":\"Dasboard_PullRight__3Dmy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFound\":\"NotFound_NotFound__yF7tF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"Board_Board__2eUuJ\"};","const aux = (props) => props.children;\n\nexport default aux;","const i18 = {\n    NOT_FOUND : \"NOT_FOUND\",\n    logoText : \"TodoNext\",\n    signinPlaceholder : \"Enter Your Name\",\n    signInText : \"Sign In\",\n    guestLogin : \"Guest Login\",\n    noBoards : \"You have not create any board yet.\",\n    createNewBoard : \"Create New Board\",\n    loading : \"Loading\",\n    titleLable : \"Enter Title\",\n    create : \"Create\",\n    description : \"Enter Description\",\n    cancel : \"Cancel\",\n    viewBoard : \"View Board\",\n    viewTask : \"View Task\",\n    noTasks : \"You have not create any task yet.\",\n    createNewTask : \"Create New Task\",\n    comments : \"Comments\",\n    status : \"Status\",\n    writeComment : \"Write comment\",\n    postComment : \"Comment\",\n    close : \"Close\",\n    filterTasks : \"Filter Tasks: \",\n    notFoundInSelectedFilter : \"Nothing matched with selected filter. Please select different filter!\"\n}\nexport default i18;","import React from 'react';\nimport classes from './Logo.module.css';\nimport i18 from \"../../services/i18.services\";\n\nconst logo = () => (\n    <div className={classes.Logo}>\n        {i18.logoText}\n    </div>\n);\n\nexport default logo;","const getUUID = preStr => {\n\tlet dt = new Date().getTime();\n    let uuid = 'xxx-4x-yxx'.replace(/[xy]/g, function(c) {\n        let r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c==='x' ? r :((r&0x3)|(0x8))).toString(16);\n    });\n    return preStr+ uuid;\n}\n\nconst getExpDate = (expiresIn) => {\n    return new Date(new Date().getTime() + expiresIn * 1000);\n}\n\nconst __setUpdate = (key, val) => {\n    let data = localStorage.getItem(key);\n    if (data) {\n        data =  JSON.parse(data);\n    } else {\n        data = []\n    }\n    data.push(val);\n    localStorage.setItem(key, JSON.stringify(data));\n    return data;\n}\n\nconst getCreatedAt = () => new Date().getTime();\n\nconst returnData = (status, data, errMsg = false) => {\n    const ret = {\n        status : status,\n        data : data,\n        errMsg : errMsg\n    }\n    return ret;\n}\n\nconst getDataByFieldName = (fieldName, fieldValue, data) => {\n    return data.filter(item => item[fieldName] === fieldValue);\n}\n\nexport {\n    getUUID,\n    getExpDate,\n    getCreatedAt,\n    returnData,\n    getDataByFieldName,\n    __setUpdate\n}","import {\n    getUUID,\n    getCreatedAt\n} from \"../util\";\n\nconst createUser = (name, email) => {\n    const user = Object.create(null);\n    user.id = getUUID(\"user\");\n    user.name = name;\n    user.email = email || name;\n    user.createdAt = getCreatedAt();\n    user.lastModified = user.createdAt;\n    return user;\n }\n\n export default createUser;","import {\n    getExpDate, \n    returnData,\n    __setUpdate\n} from \"../util\";\nimport i18 from \"../i18.services\";\nimport createUser from \"./userModal\";\n\nimport * as DBCONSTANTS from \"../constants\";\n\nconst login = (name) => {\n    let user = getUserByName(name);\n    if (user.status === false) {\n       user = createNewUser(name);\n    }\n    return {\n        success : true,\n        data : user.data,\n        expiresIn : 3600\n    }\n}\n\nconst setLoginInfoInLocalStorage = (data) => {\n    localStorage.setItem('token', data.data.id);\n    localStorage.setItem('expirationDate', getExpDate(data.expiresIn));\n    localStorage.setItem('userId', data.data.id);\n    localStorage.setItem('userName', data.data.name);\n}\n\nconst removeSessionStorage = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userName');\n}\n\nconst getUserByName = (name) => {\n    let userData = localStorage.getItem(DBCONSTANTS.USER_DATA);\n    if (!userData) {\n        return returnData(false, null, i18.NOT_FOUND);\n    } else {\n        userData =  JSON.parse(userData);\n        let data = userData.filter(item => item.name === name);\n        if (data.length) {\n            return returnData(true, data[0]);\n        } else {\n            return returnData(false, null, i18.NOT_FOUND);\n        }\n    }\n}\n\nconst createNewUser = (name) =>  {\n    let user = createUser(name);\n    __setUpdate(DBCONSTANTS.USER_DATA, user);\n    return returnData(true, user);\n}\n\nconst getUserById = (id) => {\n    let userData = localStorage.getItem(DBCONSTANTS.USER_DATA);\n    if (!userData) {\n        return null;\n    } else {\n        userData =  JSON.parse(userData);\n        let data = userData.filter(item => item.id === id);\n        if (data.length) {\n            return data[0];\n        } else {\n            return null;\n        }\n    }\n} \n\nexport {\n    login,\n    setLoginInfoInLocalStorage,\n    removeSessionStorage,\n    getUserById\n}","export const USER_DATA = \"USER_DATA\";\nexport const BOARD_DATA = \"BOARD_DATA\";\nexport const TASK_DATA = \"TASK_DATA\";\nexport const COMMENT_DATA = \"COMMENT_DATA\";\n","import {\n    getUUID,\n    getCreatedAt\n} from \"../util\";\n\nconst createBoard = (title, createdBy, description = \"\") => {\n    const board = Object.create(null);\n    board.id = getUUID(\"board\");\n\tboard.title = title || board.id;\n    board.description = description;\n    board.createdAt =  getCreatedAt();\n\tboard.lastModified = board.createdAt;\n\tboard.createdBy = createdBy;\n    return board;\n }\n\n export default createBoard;","import {\n    getUUID,\n    getCreatedAt\n} from \"../util\";\n\nconst createTask = (title, description, boardId, createdBy, status = 0) => {\n    const task = Object.create(null);\n    task.id = getUUID(\"task\");\n\ttask.boardId = boardId;\n\ttask.createdBy = createdBy;\n\ttask.createdAt =  getCreatedAt();\n    task.lastModified = task.createdAt;\n\ttask.title = title || task.id;\n\ttask.description = description;\n    task.status =  status;\n    return task;\n }\n\n export default createTask;\n","import {\n    getUUID,\n    getCreatedAt\n} from \"../util\";\n\nconst createCommnet = (taskId, createdBy, text) => {\n    const comment = Object.create(null);\n    comment.id = getUUID(\"comment\");\n\tcomment.taskId = taskId;\n\tcomment.createdBy = createdBy;\n\tcomment.createdAt =  getCreatedAt();\n    comment.lastModified = comment.createdAt;\n\tcomment.text = text;\n    return comment;\n }\n\n export default createCommnet;","import {\n    returnData,\n    getDataByFieldName,\n    __setUpdate\n} from \"../util\";\nimport i18 from \"../i18.services\";\nimport * as DBCONSTANTS from \"../constants\";\nimport createBoard from \"./boardModal\";\nimport createTask from \"./taskModal\";\nimport createComment from \"./commentModal\";\nimport {getUserById} from \"../userService/loginService\";\n\nconst getBoardByUserId = userId => {\n    let boards = localStorage.getItem(DBCONSTANTS.BOARD_DATA);\n    if (!boards) {\n        return returnData(false, null, i18.NOT_FOUND);\n    } else {\n        return getBoardsMapByUserId(userId, JSON.parse(boards));\n    }\n}\n\nconst createNewBoard = (title, createdBy, description) =>  {\n    let board = createBoard(title, createdBy, description);\n    __setUpdate(DBCONSTANTS.BOARD_DATA, board);\n    return returnData(true, board);\n}\n\nconst getBoardsMapByUserId = (userId, data) => {\n    let boards = getDataByFieldName(\"createdBy\", userId, data);\n    if (boards.length === 0) {\n        return returnData(false, null, i18.NOT_FOUND);\n    }\n    let boardMap = {};\n    boards.forEach(item => {\n        boardMap[item.id] = item;\n    })\n    return returnData(true, boardMap);\n}\n\nconst createNewTask = (title, description, boardId, userId) => {\n    let task = createTask(title, description, boardId, userId);\n    __setUpdate(DBCONSTANTS.TASK_DATA, task);\n    return returnData(true, task);\n}\n\n\nconst getTaskList = (boardId, data) => {\n    const tasks = getDataByFieldName(\"boardId\", boardId, data);\n    if (tasks.length === 0) {\n        return returnData(false, null, i18.NOT_FOUND);\n    }\n    const comments = localStorage.getItem(DBCONSTANTS.COMMENT_DATA);\n    let callAPI = false;\n    if (comments) {\n        callAPI =  true\n    }\n    let ret = {};\n    tasks.forEach((item, i) => {\n        item.commentCount = callAPI ? getDataByFieldName(\"taskId\", item.id, JSON.parse(comments)).length : 0;\n        ret[item.id] = item;\n    });\n    return returnData(true, ret);\n}\n\nconst getTasksByBoardId = (boardId) => {\n    let tasks = localStorage.getItem(DBCONSTANTS.TASK_DATA);\n    if (!tasks) {\n        return returnData(false, null, i18.NOT_FOUND);\n    } else {\n        return getTaskList(boardId, JSON.parse(tasks));\n    }\n}\n\nconst getTaskContent = (taskId) => {\n    let tasks = localStorage.getItem(DBCONSTANTS.TASK_DATA);\n    if (!tasks) {\n        return returnData(false, null, i18.NOT_FOUND);\n    } else {\n        return getTaskByTaskId(taskId, JSON.parse(tasks));\n    }\n}\n\nconst getTaskByTaskId = (taskId, data) => {\n    const tasks = getDataByFieldName(\"id\", taskId, data);\n    if (tasks.length === 0) {\n        return returnData(false, null, i18.NOT_FOUND);\n    }\n    const comments = localStorage.getItem(DBCONSTANTS.COMMENT_DATA);\n    let callAPI = false;\n    if (comments) {\n        callAPI =  true\n    }\n    let task = tasks[0];\n    task.comment =  callAPI ? getCommentsByTaskId(task.id, JSON.parse(comments)) : null;\n    return returnData(true, task);\n}\n\nconst getCommentsByTaskId = (taskId, data) => {\n    const comments = getDataByFieldName(\"taskId\", taskId, data);\n    if (comments.length) {\n        comments.map(item => {\n            item.userInfo = getUserById(item.createdBy).name;\n            return item;\n        })\n        return comments;\n    }\n    return null;\n}\n\nconst createNewComment = (taskId, createdBy, text) => {\n    let comment = createComment(taskId, createdBy, text);\n    __setUpdate(DBCONSTANTS.COMMENT_DATA, comment);\n    return returnData(true, comment);\n}\n\nconst updateTaskStatusService = (status, taskId) => {\n    let tasks = localStorage.getItem(DBCONSTANTS.TASK_DATA);\n    tasks = JSON.parse(tasks);\n    tasks.forEach((task, i) => {\n        if (task.id === taskId) {\n            tasks[i].status = status;\n        }\n    });\n    localStorage.setItem(DBCONSTANTS.TASK_DATA, JSON.stringify(tasks));\n    return status;\n}\n\n\nexport {\n    getBoardByUserId,\n    createNewBoard,\n    getTasksByBoardId,\n    createNewTask,\n    getTaskContent,\n    createNewComment,\n    updateTaskStatusService\n}","import * as actionTypes from \"./actionTypes\";\n\nimport {\n    login, \n    setLoginInfoInLocalStorage, \n    removeSessionStorage\n} from \"../../services/userService/loginService\";\n\nimport {\n    getBoardByUserId,\n    createNewBoard,\n    getTasksByBoardId,\n    createNewTask,\n    getTaskContent,\n    createNewComment,\n    updateTaskStatusService\n} from \"../../services/boardService/boardService\"\n\n\nexport const getBoards= (userId) => {\n    return dispatch => {\n        // call api to get dashboard\n        let response = getBoardByUserId(userId);\n        dispatch(setDashboard(response.data));\n    };\n}\n\nexport const setDashboard = (data) => {\n    return {\n        type : actionTypes.SET_DASHBOARD,\n        data : data\n    }\n}\n\nexport const createBoard = (title, createdBy, description) => {\n    return dispatch => {\n        // call api to create new dashboard\n        createNewBoard(title, createdBy, description);\n        dispatch(getBoards(createdBy));\n    };\n}\n\n// tasks reducer\nexport const getTasks= (boardId) => {\n    return dispatch => {\n        // call api to get dashboard\n        let response = getTasksByBoardId(boardId);\n        dispatch(setTasks(boardId, response.data));\n    };\n}\n\nexport const setTasks = (boardId, data) => {\n    return {\n        type : actionTypes.SET_TASKS,\n        data : data,\n        boardId: boardId\n    }\n}\n\nexport const createTask = (title, description, boardId, userId) => {\n    return dispatch => {\n        // call api to create new dashboard\n        createNewTask(title, description, boardId, userId);\n        dispatch(getTasks(boardId));\n    };\n}\n\n// task content reducers\nexport const getTaskWithComments = (taskId) => {\n    return dispatch => {\n        // call api to get dashboard\n        let response = getTaskContent(taskId);\n        dispatch(setTaskContent(response.data));\n    };\n}\n\nexport const setTaskContent = (data) => {\n    return {\n        type : actionTypes.SET_TASKCONTENT,\n        data : data\n    }\n}\n\nexport const createComment = (taskId, createdBy, text, boardId) => {\n    return dispatch => {\n        // call api to create new dashboard\n        createNewComment(taskId, createdBy, text);\n        dispatch(getTaskWithComments(taskId));\n        dispatch(getTasks(boardId));\n    };\n}\n\nexport const updateTaskStatus = (val, taskId, boardId) => {\n    return dispatch => {\n        // call api to create new dashboard\n        updateTaskStatusService(val, taskId);\n        dispatch(getTaskWithComments(taskId));\n        dispatch(getTasks(boardId));\n    };\n}\n// Login Action Creators\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (userId, userName) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        userId: userId,\n        userName : userName\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = (cb) => {\n    removeSessionStorage();\n    if (typeof cb === \"function\") {\n        cb();\n    }\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (name) => {\n    return dispatch => {\n        const loginResponse = login(name);\n        setLoginInfoInLocalStorage(loginResponse);\n        dispatch(authSuccess(loginResponse.data.id, loginResponse.data.name));\n        dispatch(checkAuthTimeout(loginResponse.expiresIn));\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                const userName = localStorage.getItem('userName');\n                dispatch(authSuccess(userId, userName));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }   \n        }\n    };\n};","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\nexport const SET_DASHBOARD = \"SET_DASHBOARD\";\nexport const SET_TASKS = \"SET_TASKS\";\nexport const SET_TASKCONTENT = \"SET_TASKCONTENT\";","import React from 'react';\nimport {connect} from \"react-redux\";\nimport classes from './NavigationItem.module.css';\nimport * as actionCreators from \"../../../../store/actions/actionCreators\";\nimport { useHistory } from 'react-router-dom'\n\n\nconst NavigationItem = ( props ) => {\n    let history = useHistory();\n    const logout = (e) => {\n        e.preventDefault();\n        props.logout(() => {history.push(\"/\"); window.location.reload()})\n    }\n    if (props.auth) {\n        return (\n            <li className={classes.NavigationItem}>\n            <a \n                href={props.link}\n                onClick={logout}\n                className={props.active ? classes.active : null}>{props.children}</a>\n        </li>\n        )\n    }\n    return null;\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth : state.auth\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n      logout : (cb) => dispatch(actionCreators.logout(cb))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationItem);","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" active>Logout</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;\n","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/AuxComp/AuxComp';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport Aux from '../AuxComp/AuxComp';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default Layout;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nfunction PrivateRoute({ component: Component, auth : authData,  ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authData ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/\"}}\n          />\n        )\n      }\n    />\n  );\n}\nconst mapStateToProps = state => {\n    return {\n        auth : state.auth,\n    }\n}\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = ({type, onChangeHandeler, classNames, value, placeholder, inputStyle, name}) => {\n    type = type || \"text\";\n    let inputStyleDefault = classes.inputStyle;\n    if (inputStyle) {\n        inputStyleDefault = classes[inputStyle];\n    }\n    classNames = [inputStyleDefault, classNames].join(\" \");\n    const [inputValue, setInputValue] = React.useState(\"\");\n    if (typeof onChangeHandeler !== \"function\") {\n        onChangeHandeler = (event) => {\n            setInputValue(event.target.value);\n        }\n        value = inputValue;\n    }\n    return <input \n        type={type} \n        onChange = {onChangeHandeler}\n        className={classNames}\n        value={value}\n        placeholder={placeholder}\n        name={name}\n    />\n}\n\nexport default Input;","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = ({clicked, children, btnType, type, name, disabled, style, classNames}) => {\n    type = type || \"button\";\n    classNames = classNames || \"\"\n    return (\n        <button\n            className={[classes.Button, classes[btnType], classNames].join(' ')}\n            onClick={clicked}\n            type={type}\n            style={style}\n            name = {name}\n            disabled={disabled}\n        >\n            {children}\n        </button>\n    )\n}\n    \n\nexport default button;","import React from 'react';\n\nimport classes from './FormRow.module.css';\n\nconst formRow = ({children, style}) => {\n    return (\n        <div\n            className={classes.FormRow}\n            style={style}\n        >\n            {children}\n        </div>\n    )\n}\n    \n\nexport default formRow;","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Redirect } from \"react-router-dom\";\n\nimport classes from './Login.module.css';\nimport * as actionCreators from \"../../store/actions/actionCreators\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport FormRow from \"../../components/UI/FormRow/FormRow\";\nimport Logo from \"../../components/Logo/Logo\";\nimport i18 from \"../../services/i18.services\";\n\nfunction Login(props) {\n    const [name, setName] = useState(\"\");\n\n    const submitHandeler = (e) => {\n        e.preventDefault();\n        props.onAuth(name);\n    } \n    const {isLoggedIn} = props;\n    const isDisabled = name === \"\" ? true : false;\n\n    useEffect(() => {\n        isLoggedIn();\n    }, [isLoggedIn]);\n\n    if (props.auth) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n        <div className={classes.Main}>\n            <p className={classes.SignInText}>\n                {i18.signInText}\n            </p>\n            <Logo />\n            <form onSubmit={submitHandeler}>\n                <FormRow>\n                    <Input \n                        value={name}\n                        placeholder={i18.signinPlaceholder}\n                        onChangeHandeler={(e) => setName(e.target.value)}\n                        name=\"userName\"\n                    />\n                </FormRow>\n                <FormRow>\n                    <Button \n                        btnType=\"Rounded\" \n                        type=\"submit\" \n                        name=\"guestLogin\" \n                        disabled={isDisabled}\n                    >\n                        {i18.guestLogin}\n                    </Button>\n                </FormRow>\n            </form>      \n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth : state.auth,\n        authError : state.authError\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n      onAuth : (login) => dispatch(actionCreators.auth(login)),\n      isLoggedIn : () => dispatch(actionCreators.authCheckState())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","const cn = (...args) => args.join(\" \");\nconst getStatus = (num) => {\n    const status = [\"Pending\", \"In Progress\", \"Done\"];\n    if (typeof num === \"undefined\") {\n        return status;\n    }\n    return status[num];\n}\nexport {\n    cn,\n    getStatus\n} ","import React, { Component } from 'react';\n\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/AuxComp/AuxComp';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show;\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal;","import React, {useState}from \"react\";\nimport classes from \"./CreateNewBoard.module.css\";\nimport d from \"../../UI/index.module.css\";\nimport {cn} from \"../../../utils/utils\";\n\nimport Button from \"../../UI/Button/Button\";\nimport Input from \"../../UI/Input/Input\";\nimport i18 from \"../../../services/i18.services\";\n\nfunction CreateNewBoard(props) {\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const isDisabled = (title !== \"\" && description !==\"\") ? false : true;\n    const clickHandeler = () => {\n        props.create(title, description);\n        setTitle(\"\");\n        setDescription(\"\");\n    }\n    return (\n        <section className={classes.NewBoard}>\n            <h2>{props.heading}</h2>\n            <div className={classes.InputContainer}>\n                <Input \n                    value={title} \n                    onChangeHandeler={(e) => setTitle(e.target.value)} \n                    placeholder={i18.titleLable}\n                />\n            </div>\n            <div className={classes.InputContainer}>\n                <Input \n                    value={description} \n                    onChangeHandeler={(e) => setDescription(e.target.value)} \n                    placeholder={i18.description}\n                />\n            </div>\n            <div className={cn(d.PullRight, classes.InputContainer)}>\n                <Button\n                    btnType=\"AutoWidth\" \n                    name=\"createBoard\"\n                    clicked={clickHandeler}\n                    disabled={isDisabled}\n                >\n                    {i18.create}\n                </Button>\n                <Button\n                    btnType=\"AutoWidth\" \n                    name=\"Cancel\"\n                    classNames = {d.MarginLSM}\n                    clicked={props.cancel}\n                >\n                    {i18.cancel}\n                </Button>\n            </div>\n\n        </section>\n    )\n}\nexport default CreateNewBoard;","import React from \"react\";\nimport classes from \"./Card.module.css\";\nconst card = ({children}) => {\n    return (\n        <section className={classes.Card}>\n            <div className={classes.Container}>\n                {children}\n            </div>\n        </section>\n    )\n}\nexport default card;","import React from \"react\"; \nimport Card from \"../../../components/UI/Card/Card\";\nimport i18 from \"../../../services/i18.services\"\nimport d from \"../../../components/UI/index.module.css\";\nimport {Link} from \"react-router-dom\";\n\nfunction boards({data}) {\n    if (!data) {\n        return (\n            <h2>\n                {i18.noBoards}\n            </h2>\n        )\n    }\n    let boards = Object.keys(data).map(item => {\n        let board = data[item];\n        return (\n            <Card key={board.id}>\n                <h3>{board.title}</h3> \n                <p>{board.description}</p>\n                <div className={d.LinkStyle}>\n                    <Link to={`/board/${board.id}`}>{i18.viewBoard}</Link> \n                </div>\n            </Card>\n        )\n    })\n    return (\n        <section>\n            {boards}\n        </section>\n    )\n}\nexport default boards;","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport s from \"./Dasboard.module.css\";\nimport d from \"../../components/UI/index.module.css\"\nimport {cn} from \"../../utils/utils\"; \nimport * as actionCreators from \"../../store/actions/actionCreators\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport CreateNewBoard from \"../../components/Board/CreateNewBoard/CreateNewBoard\";\nimport Boards from \"./Boards/Boards\";\nimport i18 from \"../../services/i18.services\";\n\nfunction Dashboard(props) {\n   const {userId, getBoards} = props;\n    useEffect(() => {\n        getBoards(userId);\n    }, [getBoards, userId]);\n\n    const [modalState, setModalState] = useState(false);\n    const changeModalState = () => {\n        setModalState(!modalState);\n    }\n    const create = (title, description) => {\n       props.createBoard(title, userId, description);\n       changeModalState();\n\n    }\n    return (\n        <>\n            <section>\n                <h1 className={cn(d.inlineBlock, d.marginNone)}>Dasboard : {props.userName}</h1> \n                <div className= {cn(d.PullRight, d.inlineBlock)}>\n                    <Button \n                            btnType=\"AutoWidth\" \n                            name=\"createNewBoard\"\n                            clicked={changeModalState}\n                        >\n                            {i18.createNewBoard}\n                        </Button>\n                </div>\n            </section>\n            <div className={s.Dashboard} >\n                <Modal show={modalState} modalClosed={changeModalState}>\n                    <CreateNewBoard cancel={changeModalState} create={create} heading={i18.createNewBoard}/>\n                </Modal>\n                {props.loading ? i18.loading : \n                    <Boards data={props.boardData} /> \n                } \n            </div>\n        </>\n    )\n}\n\n\n\nconst mapStateToProps = state => {\n    return {\n        userId : state.userId,\n        userName : state.userName,\n        loading : state.loading,\n        boardData : state.boardData\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getBoards : (userId) => dispatch(actionCreators.getBoards(userId)),\n        createBoard : (title, userId, description) => dispatch(actionCreators.createBoard(title, userId, description))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\n","import React from \"react\";\nimport classes from \"./NotFound.module.css\"\n\nfunction NotFound(props) {\n    return (\n        <div className={classes.NotFound}><h1>404</h1></div>\n    )\n}\nexport default NotFound;\n","import React from \"react\";\nimport classes from \"./Comments.module.css\";\n\nfunction Comments({data}) {\n    return (\n        <>\n            {data === null ? null :\n                <section className={classes.Comments}>\n                    {data.map(item => <Comment key={item.id} data={item} />)}\n                </section>\n            }\n        </>\n    )\n}\n\nexport default Comments;\nfunction Comment ({data}) {\n    return (\n        <section>\n            <span className={classes.userInfo}>{data.userInfo}</span> : {data.text}\n        </section>\n    )\n}","import React from \"react\";\n\nfunction Select({options, onChange, value}) {\n\n    //console.log(props.options);\n\n    return (\n        <select onChange={onChange} value={value} >\n            {options.map((item, i) => (\n                <option key={item} value={i}>\n                    {item}\n                </option>\n            ))}\n        </select>\n    )\n}\n\nexport default Select;","import React, {useEffect, useState}from \"react\";\nimport {connect} from \"react-redux\";\nimport * as actionCreators from \"../../store/actions/actionCreators\";\nimport i18 from \"../../services/i18.services\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Comments from \"../../components/Board/Comments/Comments\";\nimport d from \"../../components/UI/index.module.css\";\nimport {getStatus} from \"../../utils/utils\";\nimport Select from \"../../components/UI/Select/Select\";\n\nfunction TaskContent(props) {\n    const {\n        taskId, \n        getTaskWithComments,\n        userId,\n        boardId,\n        tasks,\n        cancle\n    } = props;\n\n\n    const [commentText, setComment] = useState(\"\");\n    const isDisabled = commentText !== \"\"  ? false : true;\n    let taskStatus = tasks === null ? 0 : tasks.status;\n    const [selectvalue, setSelectValue] = useState(taskStatus);\n    const clickHandeler = () => {\n        props.createComment(taskId, userId, commentText, boardId);\n        setComment(\"\");\n    }\n    useEffect(() => {\n        getTaskWithComments(taskId);\n        setSelectValue(taskStatus);\n    }, [getTaskWithComments, taskId, taskStatus]);\n\n    const selectHandeler = (val) => {\n        setSelectValue(val);\n        props.updateTaskStatus(val, taskId, boardId);\n    }\n\n    return (\n        <section>\n            {tasks === null ? \"loading\" : \n                <>\n                    <h1>{tasks.title}</h1>\n                    <p>{tasks.description}</p>\n                    <div className={d.MarginBSM}>\n                        Status : <Select options={getStatus()} value={selectvalue}  onChange={e => selectHandeler(e.target.value)}/>\n                    </div>\n                    <Comments data={tasks.comment} />\n                    <div className={d.MarginBSM}>\n                        <Input \n                            value={commentText} \n                            onChangeHandeler={(e) => setComment(e.target.value)} \n                            placeholder={i18.writeComment}\n                        />\n                    </div>\n                    <div className={d.PullRight}>\n                    <Button\n                        btnType=\"AutoWidth\" \n                        name=\"postComment\"\n                        clicked={clickHandeler}\n                        disabled={isDisabled}\n                    >\n                        {i18.postComment}\n                    </Button>\n\n                    <Button\n                        btnType=\"AutoWidth\" \n                        name=\"postComment\"\n                        clicked={cancle}\n                        classNames = {d.MarginLSM}\n                    >\n                        {i18.close}\n                    </Button>\n                    </div>\n                </>\n            }\n           \n        </section>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading : state.loading,\n        tasks : state.taskContent,\n        userId : state.userId\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateTaskStatus : (val, taskId, boardId) => dispatch(actionCreators.updateTaskStatus(val, taskId, boardId)),\n        getTaskWithComments : (taskId) => dispatch(actionCreators.getTaskWithComments(taskId)),\n        createComment : (taskId, createdBy, text, boardId) => dispatch(actionCreators.createComment(taskId, createdBy, text, boardId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskContent);","import React, {useState} from \"react\"; \nimport Card from \"../../../components/UI/Card/Card\";\nimport i18 from \"../../../services/i18.services\"\nimport d from \"../../../components/UI/index.module.css\";\nimport {getStatus} from \"../../../utils/utils\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport Modal from \"../../../components/UI/Modal/Modal\";\nimport TaskContent from \"../../TaskContent/TaskContent\"\n\n\nfunction Tasks({data, boardId, filterValue}) {\n    const [modalState, setModalState] = useState(false);\n    const [taskId, setTaskId] = useState(\"\");\n    const changeModalState = () => {\n        setModalState(!modalState);\n    }\n\n    const clickHandeler = (taskId) => {\n        setTaskId(taskId);\n        setModalState(true);\n    }\n    if (!data) {\n        return (\n            <h2>\n                {i18.noTasks}\n            </h2>\n        )\n    }\n    let filteredTasks = Object.keys(data);\n    if (+filterValue !== 0) {\n        filteredTasks = filteredTasks.filter(item => {\n            \n            let task = data[item];\n            return +task.status === (filterValue - 1);\n        })\n    }\n   \n    let tasks = filteredTasks.map(item => {\n        let task = data[item];\n        return (\n            <Card key={task.id}>\n                <h3>{task.title}</h3> \n                <p>{task.description}</p>\n                <section className={d.CardFooter}>\n                    <div><b>{i18.comments}: {task.commentCount}</b></div>\n                    <div><b>{i18.status}: {getStatus(task.status)}</b></div>\n                    <div>\n                        <Button \n                            btnType=\"AutoWidth\" \n                            name=\"viewTask\"\n                            clicked={(taskId) => clickHandeler(task.id)}\n                        >\n                            {i18.viewTask}\n                        </Button>\n                    </div>\n                </section>\n            </Card>\n        )\n    });\n    return (\n        <>\n            <Modal show={modalState} modalClosed={changeModalState}>\n                {taskId !== \"\" ? <TaskContent taskId={taskId} boardId={boardId} cancle={changeModalState}/> : null} \n            </Modal>\n            <section>\n                {filteredTasks.length ? tasks : <h1>{i18.notFoundInSelectedFilter}</h1>}\n            </section>\n        </>\n    )\n}\nexport default Tasks;","import React, {useState, useEffect}from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport * as actionCreators from \"../../store/actions/actionCreators\";\nimport i18 from \"../../services/i18.services\";\nimport s from \"./Board.module.css\";\nimport d from \"../../components/UI/index.module.css\";\nimport {cn, getStatus} from \"../../utils/utils\"; \nimport Button from \"../../components/UI/Button/Button\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport CreateNewBoard from \"../../components/Board/CreateNewBoard/CreateNewBoard\";\nimport Tasks from \"./Tasks/Tasks\";\nimport Select from \"../../components/UI/Select/Select\";\n\n\nfunction Board(props) {\n    const boardId = props.match.params.boardId;\n    const [modalState, setModalState] = useState(false);\n    const [selectvalue, setSelectValue] = useState(0);\n    const filter_params = getStatus();\n    filter_params.unshift(\"Please Select\");\n    \n    const selectHandeler = (val) => {\n        setSelectValue(val);\n        //props.updateTaskStatus(val, taskId, boardId);\n    }\n    const changeModalState = () => {\n        setModalState(!modalState);\n    }\n    const create = (title, description) => {\n        props.createTask(title, description, boardId, props.userId);\n        changeModalState();\n    }\n\n    const {getTasks} = props;\n\n    useEffect(() => {\n        getTasks(boardId);\n    }, [getTasks, boardId]);\n\n    if (boardId === \"\") {\n        return <Redirect to=\"/dashboard\" />;\n    } \n\n    return (\n        <>\n            <section>\n                <h1 className={cn(d.inlineBlock, d.marginNone)}>Board : {props.boardData[boardId].title}</h1> \n                <div className= {cn(d.PullRight, d.inlineBlock)}>\n                    <span>\n                        {i18.filterTasks} \n                        <Select \n                            options={filter_params} \n                            value={selectvalue}  \n                            onChange={e => selectHandeler(e.target.value)}\n                        />\n                    </span>\n                    <Button \n                            btnType=\"AutoWidth\" \n                            name=\"createNewTask\"\n                            clicked={changeModalState}\n                            classNames={d.MarginLMD}\n                        >\n                            {i18.createNewTask}\n                    </Button>\n                </div>\n            </section>\n            <div className={s.Board}>\n                <Modal show={modalState} modalClosed={changeModalState}>\n                    <CreateNewBoard cancel={changeModalState} create={create} heading={i18.createNewTask}/>\n                </Modal>\n                {props.loading ? i18.loading : \n                    <Tasks data={props.tasks} boardId={boardId} filterValue={selectvalue}/> \n                }\n            </div>\n        </>\n    )\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        loading : state.loading,\n        boardData : state.boardData,\n        tasks : state.tasks,\n        userId : state.userId\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        getTasks : (boardId) => dispatch(actionCreators.getTasks(boardId)),\n        createTask : (title, description, boardId, userId) => dispatch(actionCreators.createTask(title, description, boardId, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport PrivateRoute from \"./privateRoute\";\nimport Login from \"./containers/Login/Login\";\nimport Dashboard from \"./containers/Dashboard/Dashboard\";\nimport NotFound from \"./components/NotFound/NotFound\";\nimport Board from \"./containers/Board/Board\";\n\nclass App extends Component {\n  render () {\n      return (\n        <div>\n          <Layout>\n            <Switch>\n              <Route exact path={\"/\"} component={Login} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/board/:boardId\" component={Board} />\n              <Route component={NotFound} />\n            </Switch>\n          </Layout>\n        </div>\n      );\n    }\n}\n\n\n\nexport default App;","import * as actionTypes from \"./actions/actionTypes\";\n\nconst initialState = {\n    boardData : null,\n    tasks : null,\n    loading : true,\n    error : false,\n    auth : false,\n    userId : \"\",\n    userName : \"\",\n    authError : false,\n    taskContent : null\n}\n\nconst reducer = (state= initialState, action) => {\n        switch(action.type) {\n\n            case actionTypes.AUTH_FAIL : \n                return {\n                    ...state,\n                    auth : false,\n                    authError : true\n                }\n            case actionTypes.AUTH_SUCCESS : \n                return {\n                    ...state,\n                    auth : true,\n                    userId : action.userId,\n                    userName : action.userName\n                }\n\n            case actionTypes.SET_DASHBOARD : \n                return {\n                    ...state,\n                    boardData : action.data,\n                    loading : false\n                }\n\n            case actionTypes.SET_TASKS : \n                return {\n                    ...state,\n                    tasks : action.data,\n                    loading : false\n                }\n\n            case actionTypes.SET_TASKCONTENT : \n                return {\n                    ...state,\n                    taskContent : action.data,\n                    loading : false\n                }\n            \n            default :\n                return state; \n        }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nimport {Provider} from \"react-redux\";\nimport reducer from \"./store/reducers\";\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter> \n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}