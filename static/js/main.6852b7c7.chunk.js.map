{"version":3,"sources":["components/UI/index.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Board/CreateNewBoard/CreateNewBoard.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","containers/Login/Login.module.css","components/UI/Input/Input.module.css","components/UI/Button/Button.module.css","components/UI/Card/Card.module.css","components/Board/Comments/Comments.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/FormRow/FormRow.module.css","containers/Dashboard/Dasboard.module.css","components/UI/Modal/Modal.module.css","components/NotFound/NotFound.module.css","containers/Board/Board.module.css","hoc/AuxComp/AuxComp.js","services/i18.services.js","components/Logo/Logo.js","services/util.js","services/userService/userModal.js","services/userService/loginService.js","services/constants.js","services/boardService/boardModal.js","services/boardService/taskModal.js","services/boardService/commentModal.js","services/boardService/boardService.js","store/actions/actionCreators.js","store/actions/actionTypes.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","privateRoute.js","components/UI/Input/Input.js","components/UI/Button/Button.js","components/UI/FormRow/FormRow.js","containers/Login/Login.js","utils/utils.js","components/UI/Modal/Modal.js","components/Board/CreateNewBoard/CreateNewBoard.js","components/UI/Card/Card.js","containers/Dashboard/Boards/Boards.js","containers/Dashboard/Dashboard.js","components/NotFound/NotFound.js","components/Board/Comments/Comments.js","components/UI/Select/Select.js","containers/TaskContent/TaskContent.js","containers/Board/Tasks/Tasks.js","containers/Board/Board.js","App.js","store/reducers.js","index.js"],"names":["module","exports","aux","props","children","i18","NOT_FOUND","logoText","signinPlaceholder","signInText","guestLogin","noBoards","createNewBoard","loading","titleLable","create","description","cancel","viewBoard","viewTask","noTasks","createNewTask","comments","status","writeComment","postComment","close","filterTasks","notFoundInSelectedFilter","logo","className","classes","Logo","getUUID","preStr","dt","Date","getTime","replace","c","r","Math","random","floor","toString","__setUpdate","key","val","data","localStorage","getItem","JSON","parse","push","setItem","stringify","getCreatedAt","returnData","errMsg","ret","getDataByFieldName","fieldName","fieldValue","filter","item","createUser","name","email","user","Object","id","createdAt","lastModified","setLoginInfoInLocalStorage","expiresIn","getUserByName","userData","length","createNewUser","createBoard","title","createdBy","board","createTask","boardId","task","createCommnet","taskId","text","comment","getBoardsMapByUserId","userId","boards","boardMap","forEach","getTasksByBoardId","tasks","callAPI","i","commentCount","getTaskList","getTaskByTaskId","getCommentsByTaskId","map","userInfo","getUserById","getBoards","dispatch","response","getBoardByUserId","setDashboard","type","getTasks","setTasks","getTaskWithComments","getTaskContent","setTaskContent","createComment","createNewComment","updateTaskStatus","updateTaskStatusService","authSuccess","userName","logout","cb","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","loginResponse","success","login","connect","state","actionCreators","history","useHistory","NavigationItem","href","link","onClick","e","preventDefault","window","location","reload","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","component","authData","rest","render","to","pathname","Input","onChangeHandeler","classNames","value","placeholder","inputStyle","inputStyleDefault","React","useState","inputValue","setInputValue","event","target","onChange","button","btnType","disabled","style","Button","formRow","FormRow","authError","onAuth","isLoggedIn","expirationDate","setName","isDisabled","useEffect","Main","SignInText","onSubmit","cn","args","getStatus","num","Modal","nextProps","nextState","modalClosed","transform","opacity","CreateNewBoard","setTitle","setDescription","NewBoard","heading","InputContainer","d","PullRight","MarginLSM","card","Card","Container","keys","LinkStyle","boardData","modalState","setModalState","changeModalState","inlineBlock","marginNone","s","Dashboard","Boards","NotFound","Comments","Comment","Select","options","taskContent","cancle","commentText","setComment","taskStatus","selectvalue","setSelectValue","MarginBSM","Tasks","filterValue","setTaskId","filteredTasks","CardFooter","clickHandeler","match","params","filter_params","unshift","MarginLMD","Board","App","exact","path","Login","initialState","error","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6852b7c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inlineBlock\":\"UI_inlineBlock__kH-Wi\",\"PullRight\":\"UI_PullRight__2w7DR\",\"MarginNone\":\"UI_MarginNone__NKC4g\",\"MarginLSM\":\"UI_MarginLSM__15KFp\",\"LinkStyle\":\"UI_LinkStyle__21ccY\",\"CardFooter\":\"UI_CardFooter___n0lb\",\"MarginBSM\":\"UI_MarginBSM__3N87g\",\"MarginLMD\":\"UI_MarginLMD__s-avl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1EIKg\",\"Open\":\"SideDrawer_Open__IcYiS\",\"Close\":\"SideDrawer_Close__1jlJ7\",\"Logo\":\"SideDrawer_Logo__HqX7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewBoard\":\"CreateNewBoard_NewBoard__TdJLc\",\"InputContainer\":\"CreateNewBoard_InputContainer__33YtL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1VczI\",\"Logo\":\"Toolbar_Logo__3MO9A\",\"DesktopOnly\":\"Toolbar_DesktopOnly__amO84\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__146kE\",\"active\":\"NavigationItem_active__Z4ocO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Login_Main__U3d1D\",\"SignInText\":\"Login_SignInText__14Q4N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputStyle\":\"Input_inputStyle__2jgme\",\"inputStyleFlat\":\"Input_inputStyleFlat__3_hFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__ixQPT\",\"Success\":\"Button_Success__33rU6\",\"Danger\":\"Button_Danger__3r62P\",\"Rounded\":\"Button_Rounded__3C-r1\",\"AutoWidth\":\"Button_AutoWidth__37br2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__3c8go\",\"Container\":\"Card_Container__3yy2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"Comments_userInfo__1byWy\",\"Comments\":\"Comments_Comments__1NEsn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2was_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__19Ql8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__fE-Z4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2Uy3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2AXXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormRow\":\"FormRow_FormRow__2bLS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dasboard_Dashboard__2l6Cj\",\"inlineBlock\":\"Dasboard_inlineBlock__1jHdX\",\"PullRight\":\"Dasboard_PullRight__2pZf6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1KMBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFound\":\"NotFound_NotFound__eKhlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"Board_Board__2o2J2\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","const i18 = {\r\n    NOT_FOUND : \"NOT_FOUND\",\r\n    logoText : \"TodoNext\",\r\n    signinPlaceholder : \"Enter Your Name\",\r\n    signInText : \"Sign In\",\r\n    guestLogin : \"Guest Login\",\r\n    noBoards : \"You have not create any board yet.\",\r\n    createNewBoard : \"Create New Board\",\r\n    loading : \"Loading\",\r\n    titleLable : \"Enter Title\",\r\n    create : \"Create\",\r\n    description : \"Enter Description\",\r\n    cancel : \"Cancel\",\r\n    viewBoard : \"View Board\",\r\n    viewTask : \"View Task\",\r\n    noTasks : \"You have not create any task yet.\",\r\n    createNewTask : \"Create New Task\",\r\n    comments : \"Comments\",\r\n    status : \"Status\",\r\n    writeComment : \"Write comment\",\r\n    postComment : \"Comment\",\r\n    close : \"Close\",\r\n    filterTasks : \"Filter Tasks: \",\r\n    notFoundInSelectedFilter : \"Nothing matched with selected filter. Please select different filter!\"\r\n}\r\nexport default i18;","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport i18 from \"../../services/i18.services\";\r\n\r\nconst logo = () => (\r\n    <div className={classes.Logo}>\r\n        {i18.logoText}\r\n    </div>\r\n);\r\n\r\nexport default logo;","const getUUID = preStr => {\r\n\tlet dt = new Date().getTime();\r\n    let uuid = 'xxx-4x-yxx'.replace(/[xy]/g, function(c) {\r\n        let r = (dt + Math.random()*16)%16 | 0;\r\n        dt = Math.floor(dt/16);\r\n        return (c==='x' ? r :((r&0x3)|(0x8))).toString(16);\r\n    });\r\n    return preStr+ uuid;\r\n}\r\n\r\nconst getExpDate = (expiresIn) => {\r\n    return new Date(new Date().getTime() + expiresIn * 1000);\r\n}\r\n\r\nconst __setUpdate = (key, val) => {\r\n    let data = localStorage.getItem(key);\r\n    if (data) {\r\n        data =  JSON.parse(data);\r\n    } else {\r\n        data = []\r\n    }\r\n    data.push(val);\r\n    localStorage.setItem(key, JSON.stringify(data));\r\n    return data;\r\n}\r\n\r\nconst getCreatedAt = () => new Date().getTime();\r\n\r\nconst returnData = (status, data, errMsg = false) => {\r\n    const ret = {\r\n        status : status,\r\n        data : data,\r\n        errMsg : errMsg\r\n    }\r\n    return ret;\r\n}\r\n\r\nconst getDataByFieldName = (fieldName, fieldValue, data) => {\r\n    return data.filter(item => item[fieldName] === fieldValue);\r\n}\r\n\r\nexport {\r\n    getUUID,\r\n    getExpDate,\r\n    getCreatedAt,\r\n    returnData,\r\n    getDataByFieldName,\r\n    __setUpdate\r\n}","import {\r\n    getUUID,\r\n    getCreatedAt\r\n} from \"../util\";\r\n\r\nconst createUser = (name, email) => {\r\n    const user = Object.create(null);\r\n    user.id = getUUID(\"user\");\r\n    user.name = name;\r\n    user.email = email || name;\r\n    user.createdAt = getCreatedAt();\r\n    user.lastModified = user.createdAt;\r\n    return user;\r\n }\r\n\r\n export default createUser;","import {\r\n    getExpDate, \r\n    returnData,\r\n    __setUpdate\r\n} from \"../util\";\r\nimport i18 from \"../i18.services\";\r\nimport createUser from \"./userModal\";\r\n\r\nimport * as DBCONSTANTS from \"../constants\";\r\n\r\nconst login = (name) => {\r\n    let user = getUserByName(name);\r\n    if (user.status === false) {\r\n       user = createNewUser(name);\r\n    }\r\n    return {\r\n        success : true,\r\n        data : user.data,\r\n        expiresIn : 3600\r\n    }\r\n}\r\n\r\nconst setLoginInfoInLocalStorage = (data) => {\r\n    localStorage.setItem('token', data.data.id);\r\n    localStorage.setItem('expirationDate', getExpDate(data.expiresIn));\r\n    localStorage.setItem('userId', data.data.id);\r\n    localStorage.setItem('userName', data.data.name);\r\n}\r\n\r\nconst removeSessionStorage = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('userName');\r\n}\r\n\r\nconst getUserByName = (name) => {\r\n    let userData = localStorage.getItem(DBCONSTANTS.USER_DATA);\r\n    if (!userData) {\r\n        return returnData(false, null, i18.NOT_FOUND);\r\n    } else {\r\n        userData =  JSON.parse(userData);\r\n        let data = userData.filter(item => item.name === name);\r\n        if (data.length) {\r\n            return returnData(true, data[0]);\r\n        } else {\r\n            return returnData(false, null, i18.NOT_FOUND);\r\n        }\r\n    }\r\n}\r\n\r\nconst createNewUser = (name) =>  {\r\n    let user = createUser(name);\r\n    __setUpdate(DBCONSTANTS.USER_DATA, user);\r\n    return returnData(true, user);\r\n}\r\n\r\nconst getUserById = (id) => {\r\n    let userData = localStorage.getItem(DBCONSTANTS.USER_DATA);\r\n    if (!userData) {\r\n        return null;\r\n    } else {\r\n        userData =  JSON.parse(userData);\r\n        let data = userData.filter(item => item.id === id);\r\n        if (data.length) {\r\n            return data[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n} \r\n\r\nexport {\r\n    login,\r\n    setLoginInfoInLocalStorage,\r\n    removeSessionStorage,\r\n    getUserById\r\n}","export const USER_DATA = \"USER_DATA\";\r\nexport const BOARD_DATA = \"BOARD_DATA\";\r\nexport const TASK_DATA = \"TASK_DATA\";\r\nexport const COMMENT_DATA = \"COMMENT_DATA\";\r\n","import {\r\n    getUUID,\r\n    getCreatedAt\r\n} from \"../util\";\r\n\r\nconst createBoard = (title, createdBy, description = \"\") => {\r\n    const board = Object.create(null);\r\n    board.id = getUUID(\"board\");\r\n\tboard.title = title || board.id;\r\n    board.description = description;\r\n    board.createdAt =  getCreatedAt();\r\n\tboard.lastModified = board.createdAt;\r\n\tboard.createdBy = createdBy;\r\n    return board;\r\n }\r\n\r\n export default createBoard;","import {\r\n    getUUID,\r\n    getCreatedAt\r\n} from \"../util\";\r\n\r\nconst createTask = (title, description, boardId, createdBy, status = 0) => {\r\n    const task = Object.create(null);\r\n    task.id = getUUID(\"task\");\r\n\ttask.boardId = boardId;\r\n\ttask.createdBy = createdBy;\r\n\ttask.createdAt =  getCreatedAt();\r\n    task.lastModified = task.createdAt;\r\n\ttask.title = title || task.id;\r\n\ttask.description = description;\r\n    task.status =  status;\r\n    return task;\r\n }\r\n\r\n export default createTask;\r\n","import {\r\n    getUUID,\r\n    getCreatedAt\r\n} from \"../util\";\r\n\r\nconst createCommnet = (taskId, createdBy, text) => {\r\n    const comment = Object.create(null);\r\n    comment.id = getUUID(\"comment\");\r\n\tcomment.taskId = taskId;\r\n\tcomment.createdBy = createdBy;\r\n\tcomment.createdAt =  getCreatedAt();\r\n    comment.lastModified = comment.createdAt;\r\n\tcomment.text = text;\r\n    return comment;\r\n }\r\n\r\n export default createCommnet;","import {\r\n    returnData,\r\n    getDataByFieldName,\r\n    __setUpdate\r\n} from \"../util\";\r\nimport i18 from \"../i18.services\";\r\nimport * as DBCONSTANTS from \"../constants\";\r\nimport createBoard from \"./boardModal\";\r\nimport createTask from \"./taskModal\";\r\nimport createComment from \"./commentModal\";\r\nimport {getUserById} from \"../userService/loginService\";\r\n\r\nconst getBoardByUserId = userId => {\r\n    let boards = localStorage.getItem(DBCONSTANTS.BOARD_DATA);\r\n    if (!boards) {\r\n        return returnData(false, null, i18.NOT_FOUND);\r\n    } else {\r\n        return getBoardsMapByUserId(userId, JSON.parse(boards));\r\n    }\r\n}\r\n\r\nconst createNewBoard = (title, createdBy, description) =>  {\r\n    let board = createBoard(title, createdBy, description);\r\n    __setUpdate(DBCONSTANTS.BOARD_DATA, board);\r\n    return returnData(true, board);\r\n}\r\n\r\nconst getBoardsMapByUserId = (userId, data) => {\r\n    let boards = getDataByFieldName(\"createdBy\", userId, data);\r\n    if (boards.length === 0) {\r\n        return returnData(false, null, i18.NOT_FOUND);\r\n    }\r\n    let boardMap = {};\r\n    boards.forEach(item => {\r\n        boardMap[item.id] = item;\r\n    })\r\n    return returnData(true, boardMap);\r\n}\r\n\r\nconst createNewTask = (title, description, boardId, userId) => {\r\n    let task = createTask(title, description, boardId, userId);\r\n    __setUpdate(DBCONSTANTS.TASK_DATA, task);\r\n    return returnData(true, task);\r\n}\r\n\r\n\r\nconst getTaskList = (boardId, data) => {\r\n    const tasks = getDataByFieldName(\"boardId\", boardId, data);\r\n    if (tasks.length === 0) {\r\n        return returnData(false, null, i18.NOT_FOUND);\r\n    }\r\n    const comments = localStorage.getItem(DBCONSTANTS.COMMENT_DATA);\r\n    let callAPI = false;\r\n    if (comments) {\r\n        callAPI =  true\r\n    }\r\n    let ret = {};\r\n    tasks.forEach((item, i) => {\r\n        item.commentCount = callAPI ? getDataByFieldName(\"taskId\", item.id, JSON.parse(comments)).length : 0;\r\n        ret[item.id] = item;\r\n    });\r\n    return returnData(true, ret);\r\n}\r\n\r\nconst getTasksByBoardId = (boardId) => {\r\n    let tasks = localStorage.getItem(DBCONSTANTS.TASK_DATA);\r\n    if (!tasks) {\r\n        return returnData(false, null, i18.NOT_FOUND);\r\n    } else {\r\n        return getTaskList(boardId, JSON.parse(tasks));\r\n    }\r\n}\r\n\r\nconst getTaskContent = (taskId) => {\r\n    let tasks = localStorage.getItem(DBCONSTANTS.TASK_DATA);\r\n    if (!tasks) {\r\n        return returnData(false, null, i18.NOT_FOUND);\r\n    } else {\r\n        return getTaskByTaskId(taskId, JSON.parse(tasks));\r\n    }\r\n}\r\n\r\nconst getTaskByTaskId = (taskId, data) => {\r\n    const tasks = getDataByFieldName(\"id\", taskId, data);\r\n    if (tasks.length === 0) {\r\n        return returnData(false, null, i18.NOT_FOUND);\r\n    }\r\n    const comments = localStorage.getItem(DBCONSTANTS.COMMENT_DATA);\r\n    let callAPI = false;\r\n    if (comments) {\r\n        callAPI =  true\r\n    }\r\n    let task = tasks[0];\r\n    task.comment =  callAPI ? getCommentsByTaskId(task.id, JSON.parse(comments)) : null;\r\n    return returnData(true, task);\r\n}\r\n\r\nconst getCommentsByTaskId = (taskId, data) => {\r\n    const comments = getDataByFieldName(\"taskId\", taskId, data);\r\n    if (comments.length) {\r\n        comments.map(item => {\r\n            item.userInfo = getUserById(item.createdBy).name;\r\n            return item;\r\n        })\r\n        return comments;\r\n    }\r\n    return null;\r\n}\r\n\r\nconst createNewComment = (taskId, createdBy, text) => {\r\n    let comment = createComment(taskId, createdBy, text);\r\n    __setUpdate(DBCONSTANTS.COMMENT_DATA, comment);\r\n    return returnData(true, comment);\r\n}\r\n\r\nconst updateTaskStatusService = (status, taskId) => {\r\n    let tasks = localStorage.getItem(DBCONSTANTS.TASK_DATA);\r\n    tasks = JSON.parse(tasks);\r\n    tasks.forEach((task, i) => {\r\n        if (task.id === taskId) {\r\n            tasks[i].status = status;\r\n        }\r\n    });\r\n    localStorage.setItem(DBCONSTANTS.TASK_DATA, JSON.stringify(tasks));\r\n    return status;\r\n}\r\n\r\n\r\nexport {\r\n    getBoardByUserId,\r\n    createNewBoard,\r\n    getTasksByBoardId,\r\n    createNewTask,\r\n    getTaskContent,\r\n    createNewComment,\r\n    updateTaskStatusService\r\n}","import * as actionTypes from \"./actionTypes\";\r\n\r\nimport {\r\n    login, \r\n    setLoginInfoInLocalStorage, \r\n    removeSessionStorage\r\n} from \"../../services/userService/loginService\";\r\n\r\nimport {\r\n    getBoardByUserId,\r\n    createNewBoard,\r\n    getTasksByBoardId,\r\n    createNewTask,\r\n    getTaskContent,\r\n    createNewComment,\r\n    updateTaskStatusService\r\n} from \"../../services/boardService/boardService\"\r\n\r\n\r\nexport const getBoards= (userId) => {\r\n    return dispatch => {\r\n        // call api to get dashboard\r\n        let response = getBoardByUserId(userId);\r\n        dispatch(setDashboard(response.data));\r\n    };\r\n}\r\n\r\nexport const setDashboard = (data) => {\r\n    return {\r\n        type : actionTypes.SET_DASHBOARD,\r\n        data : data\r\n    }\r\n}\r\n\r\nexport const createBoard = (title, createdBy, description) => {\r\n    return dispatch => {\r\n        // call api to create new dashboard\r\n        createNewBoard(title, createdBy, description);\r\n        dispatch(getBoards(createdBy));\r\n    };\r\n}\r\n\r\n// tasks reducer\r\nexport const getTasks= (boardId) => {\r\n    return dispatch => {\r\n        // call api to get dashboard\r\n        let response = getTasksByBoardId(boardId);\r\n        dispatch(setTasks(boardId, response.data));\r\n    };\r\n}\r\n\r\nexport const setTasks = (boardId, data) => {\r\n    return {\r\n        type : actionTypes.SET_TASKS,\r\n        data : data,\r\n        boardId: boardId\r\n    }\r\n}\r\n\r\nexport const createTask = (title, description, boardId, userId) => {\r\n    return dispatch => {\r\n        // call api to create new dashboard\r\n        createNewTask(title, description, boardId, userId);\r\n        dispatch(getTasks(boardId));\r\n    };\r\n}\r\n\r\n// task content reducers\r\nexport const getTaskWithComments = (taskId) => {\r\n    return dispatch => {\r\n        // call api to get dashboard\r\n        let response = getTaskContent(taskId);\r\n        dispatch(setTaskContent(response.data));\r\n    };\r\n}\r\n\r\nexport const setTaskContent = (data) => {\r\n    return {\r\n        type : actionTypes.SET_TASKCONTENT,\r\n        data : data\r\n    }\r\n}\r\n\r\nexport const createComment = (taskId, createdBy, text, boardId) => {\r\n    return dispatch => {\r\n        // call api to create new dashboard\r\n        createNewComment(taskId, createdBy, text);\r\n        dispatch(getTaskWithComments(taskId));\r\n        dispatch(getTasks(boardId));\r\n    };\r\n}\r\n\r\nexport const updateTaskStatus = (val, taskId, boardId) => {\r\n    return dispatch => {\r\n        // call api to create new dashboard\r\n        updateTaskStatusService(val, taskId);\r\n        dispatch(getTaskWithComments(taskId));\r\n        dispatch(getTasks(boardId));\r\n    };\r\n}\r\n// Login Action Creators\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (userId, userName) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        userId: userId,\r\n        userName : userName\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = (cb) => {\r\n    removeSessionStorage();\r\n    if (typeof cb === \"function\") {\r\n        cb();\r\n    }\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (name) => {\r\n    return dispatch => {\r\n        const loginResponse = login(name);\r\n        setLoginInfoInLocalStorage(loginResponse);\r\n        dispatch(authSuccess(loginResponse.data.id, loginResponse.data.name));\r\n        dispatch(checkAuthTimeout(loginResponse.expiresIn));\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                const userName = localStorage.getItem('userName');\r\n                dispatch(authSuccess(userId, userName));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }   \r\n        }\r\n    };\r\n};","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\nexport const SET_DASHBOARD = \"SET_DASHBOARD\";\r\nexport const SET_TASKS = \"SET_TASKS\";\r\nexport const SET_TASKCONTENT = \"SET_TASKCONTENT\";","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport classes from './NavigationItem.module.css';\r\nimport * as actionCreators from \"../../../../store/actions/actionCreators\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst NavigationItem = ( props ) => {\r\n    let history = useHistory();\r\n    const logout = (e) => {\r\n        e.preventDefault();\r\n        props.logout(() => {history.push(\"/\"); window.location.reload()})\r\n    }\r\n    if (props.auth) {\r\n        return (\r\n            <li className={classes.NavigationItem}>\r\n            <a \r\n                href={props.link}\r\n                onClick={logout}\r\n                className={props.active ? classes.active : null}>{props.children}</a>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth : state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      logout : (cb) => dispatch(actionCreators.logout(cb))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationItem);","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" active>Logout</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = ( props ) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/AuxComp/AuxComp';\r\n\r\nconst sideDrawer = ( props ) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../AuxComp/AuxComp';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState( { showSideDrawer: false } );\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( ( prevState ) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        } );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nfunction PrivateRoute({ component: Component, auth : authData,  ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authData ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/\"}}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth : state.auth,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = ({type, onChangeHandeler, classNames, value, placeholder, inputStyle, name}) => {\r\n    type = type || \"text\";\r\n    let inputStyleDefault = classes.inputStyle;\r\n    if (inputStyle) {\r\n        inputStyleDefault = classes[inputStyle];\r\n    }\r\n    classNames = [inputStyleDefault, classNames].join(\" \");\r\n    const [inputValue, setInputValue] = React.useState(\"\");\r\n    if (typeof onChangeHandeler !== \"function\") {\r\n        onChangeHandeler = (event) => {\r\n            setInputValue(event.target.value);\r\n        }\r\n        value = inputValue;\r\n    }\r\n    return <input \r\n        type={type} \r\n        onChange = {onChangeHandeler}\r\n        className={classNames}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        name={name}\r\n    />\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = ({clicked, children, btnType, type, name, disabled, style, classNames}) => {\r\n    type = type || \"button\";\r\n    classNames = classNames || \"\"\r\n    return (\r\n        <button\r\n            className={[classes.Button, classes[btnType], classNames].join(' ')}\r\n            onClick={clicked}\r\n            type={type}\r\n            style={style}\r\n            name = {name}\r\n            disabled={disabled}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n    \r\n\r\nexport default button;","import React from 'react';\r\n\r\nimport classes from './FormRow.module.css';\r\n\r\nconst formRow = ({children, style}) => {\r\n    return (\r\n        <div\r\n            className={classes.FormRow}\r\n            style={style}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\nexport default formRow;","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect } from \"react-router-dom\";\r\n\r\nimport classes from './Login.module.css';\r\nimport * as actionCreators from \"../../store/actions/actionCreators\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport FormRow from \"../../components/UI/FormRow/FormRow\";\r\nimport Logo from \"../../components/Logo/Logo\";\r\nimport i18 from \"../../services/i18.services\";\r\n\r\nfunction Login(props) {\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const submitHandeler = (e) => {\r\n        e.preventDefault();\r\n        props.onAuth(name);\r\n    } \r\n    const {isLoggedIn} = props;\r\n    const isDisabled = name === \"\" ? true : false;\r\n\r\n    useEffect(() => {\r\n        isLoggedIn();\r\n    }, [isLoggedIn]);\r\n\r\n    if (props.auth) {\r\n        return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    return (\r\n        <div className={classes.Main}>\r\n            <p className={classes.SignInText}>\r\n                {i18.signInText}\r\n            </p>\r\n            <Logo />\r\n            <form onSubmit={submitHandeler}>\r\n                <FormRow>\r\n                    <Input \r\n                        value={name}\r\n                        placeholder={i18.signinPlaceholder}\r\n                        onChangeHandeler={(e) => setName(e.target.value)}\r\n                        name=\"userName\"\r\n                    />\r\n                </FormRow>\r\n                <FormRow>\r\n                    <Button \r\n                        btnType=\"Rounded\" \r\n                        type=\"submit\" \r\n                        name=\"guestLogin\" \r\n                        disabled={isDisabled}\r\n                    >\r\n                        {i18.guestLogin}\r\n                    </Button>\r\n                </FormRow>\r\n            </form>      \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth : state.auth,\r\n        authError : state.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      onAuth : (login) => dispatch(actionCreators.auth(login)),\r\n      isLoggedIn : () => dispatch(actionCreators.authCheckState())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","const cn = (...args) => args.join(\" \");\r\nconst getStatus = (num) => {\r\n    const status = [\"Pending\", \"In Progress\", \"Done\"];\r\n    if (typeof num === \"undefined\") {\r\n        return status;\r\n    }\r\n    return status[num];\r\n}\r\nexport {\r\n    cn,\r\n    getStatus\r\n} ","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/AuxComp/AuxComp';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {useState}from \"react\";\r\nimport classes from \"./CreateNewBoard.module.css\";\r\nimport d from \"../../UI/index.module.css\";\r\nimport {cn} from \"../../../utils/utils\";\r\n\r\nimport Button from \"../../UI/Button/Button\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport i18 from \"../../../services/i18.services\";\r\n\r\nfunction CreateNewBoard(props) {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const isDisabled = (title !== \"\" && description !==\"\") ? false : true;\r\n    const clickHandeler = () => {\r\n        props.create(title, description);\r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n    }\r\n    return (\r\n        <section className={classes.NewBoard}>\r\n            <h2>{props.heading}</h2>\r\n            <div className={classes.InputContainer}>\r\n                <Input \r\n                    value={title} \r\n                    onChangeHandeler={(e) => setTitle(e.target.value)} \r\n                    placeholder={i18.titleLable}\r\n                />\r\n            </div>\r\n            <div className={classes.InputContainer}>\r\n                <Input \r\n                    value={description} \r\n                    onChangeHandeler={(e) => setDescription(e.target.value)} \r\n                    placeholder={i18.description}\r\n                />\r\n            </div>\r\n            <div className={cn(d.PullRight, classes.InputContainer)}>\r\n                <Button\r\n                    btnType=\"AutoWidth\" \r\n                    name=\"createBoard\"\r\n                    clicked={clickHandeler}\r\n                    disabled={isDisabled}\r\n                >\r\n                    {i18.create}\r\n                </Button>\r\n                <Button\r\n                    btnType=\"AutoWidth\" \r\n                    name=\"Cancel\"\r\n                    classNames = {d.MarginLSM}\r\n                    clicked={props.cancel}\r\n                >\r\n                    {i18.cancel}\r\n                </Button>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\nexport default CreateNewBoard;","import React from \"react\";\r\nimport classes from \"./Card.module.css\";\r\nconst card = ({children}) => {\r\n    return (\r\n        <section className={classes.Card}>\r\n            <div className={classes.Container}>\r\n                {children}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default card;","import React from \"react\"; \r\nimport Card from \"../../../components/UI/Card/Card\";\r\nimport i18 from \"../../../services/i18.services\"\r\nimport d from \"../../../components/UI/index.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction boards({data}) {\r\n    if (!data) {\r\n        return (\r\n            <h2>\r\n                {i18.noBoards}\r\n            </h2>\r\n        )\r\n    }\r\n    let boards = Object.keys(data).map(item => {\r\n        let board = data[item];\r\n        return (\r\n            <Card key={board.id}>\r\n                <h3>{board.title}</h3> \r\n                <p>{board.description}</p>\r\n                <div className={d.LinkStyle}>\r\n                    <Link to={`/board/${board.id}`}>{i18.viewBoard}</Link> \r\n                </div>\r\n            </Card>\r\n        )\r\n    })\r\n    return (\r\n        <section>\r\n            {boards}\r\n        </section>\r\n    )\r\n}\r\nexport default boards;","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport s from \"./Dasboard.module.css\";\r\nimport d from \"../../components/UI/index.module.css\"\r\nimport {cn} from \"../../utils/utils\"; \r\nimport * as actionCreators from \"../../store/actions/actionCreators\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport CreateNewBoard from \"../../components/Board/CreateNewBoard/CreateNewBoard\";\r\nimport Boards from \"./Boards/Boards\";\r\nimport i18 from \"../../services/i18.services\";\r\n\r\nfunction Dashboard(props) {\r\n   const {userId, getBoards} = props;\r\n    useEffect(() => {\r\n        getBoards(userId);\r\n    }, [getBoards, userId]);\r\n\r\n    const [modalState, setModalState] = useState(false);\r\n    const changeModalState = () => {\r\n        setModalState(!modalState);\r\n    }\r\n    const create = (title, description) => {\r\n       props.createBoard(title, userId, description);\r\n       changeModalState();\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <section>\r\n                <h1 className={cn(d.inlineBlock, d.marginNone)}>Dasboard : {props.userName}</h1> \r\n                <div className= {cn(d.PullRight, d.inlineBlock)}>\r\n                    <Button \r\n                            btnType=\"AutoWidth\" \r\n                            name=\"createNewBoard\"\r\n                            clicked={changeModalState}\r\n                        >\r\n                            {i18.createNewBoard}\r\n                        </Button>\r\n                </div>\r\n            </section>\r\n            <div className={s.Dashboard} >\r\n                <Modal show={modalState} modalClosed={changeModalState}>\r\n                    <CreateNewBoard cancel={changeModalState} create={create} heading={i18.createNewBoard}/>\r\n                </Modal>\r\n                {props.loading ? i18.loading : \r\n                    <Boards data={props.boardData} /> \r\n                } \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId : state.userId,\r\n        userName : state.userName,\r\n        loading : state.loading,\r\n        boardData : state.boardData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getBoards : (userId) => dispatch(actionCreators.getBoards(userId)),\r\n        createBoard : (title, userId, description) => dispatch(actionCreators.createBoard(title, userId, description))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n\r\n","import React from \"react\";\r\nimport classes from \"./NotFound.module.css\"\r\n\r\nfunction NotFound(props) {\r\n    return (\r\n        <div className={classes.NotFound}><h1>404</h1></div>\r\n    )\r\n}\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport classes from \"./Comments.module.css\";\r\n\r\nfunction Comments({data}) {\r\n    return (\r\n        <>\r\n            {data === null ? null :\r\n                <section className={classes.Comments}>\r\n                    {data.map(item => <Comment key={item.id} data={item} />)}\r\n                </section>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comments;\r\nfunction Comment ({data}) {\r\n    return (\r\n        <section>\r\n            <span className={classes.userInfo}>{data.userInfo}</span> : {data.text}\r\n        </section>\r\n    )\r\n}","import React from \"react\";\r\n\r\nfunction Select({options, onChange, value}) {\r\n\r\n    //console.log(props.options);\r\n\r\n    return (\r\n        <select onChange={onChange} value={value} >\r\n            {options.map((item, i) => (\r\n                <option key={item} value={i}>\r\n                    {item}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Select;","import React, {useEffect, useState}from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport * as actionCreators from \"../../store/actions/actionCreators\";\r\nimport i18 from \"../../services/i18.services\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Comments from \"../../components/Board/Comments/Comments\";\r\nimport d from \"../../components/UI/index.module.css\";\r\nimport {getStatus} from \"../../utils/utils\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\n\r\nfunction TaskContent(props) {\r\n    const {\r\n        taskId, \r\n        getTaskWithComments,\r\n        userId,\r\n        boardId,\r\n        tasks,\r\n        cancle\r\n    } = props;\r\n\r\n\r\n    const [commentText, setComment] = useState(\"\");\r\n    const isDisabled = commentText !== \"\"  ? false : true;\r\n    let taskStatus = tasks === null ? 0 : tasks.status;\r\n    const [selectvalue, setSelectValue] = useState(taskStatus);\r\n    const clickHandeler = () => {\r\n        props.createComment(taskId, userId, commentText, boardId);\r\n        setComment(\"\");\r\n    }\r\n    useEffect(() => {\r\n        getTaskWithComments(taskId);\r\n        setSelectValue(taskStatus);\r\n    }, [getTaskWithComments, taskId, taskStatus]);\r\n\r\n    const selectHandeler = (val) => {\r\n        setSelectValue(val);\r\n        props.updateTaskStatus(val, taskId, boardId);\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            {tasks === null ? \"loading\" : \r\n                <>\r\n                    <h1>{tasks.title}</h1>\r\n                    <p>{tasks.description}</p>\r\n                    <div className={d.MarginBSM}>\r\n                        Status : <Select options={getStatus()} value={selectvalue}  onChange={e => selectHandeler(e.target.value)}/>\r\n                    </div>\r\n                    <Comments data={tasks.comment} />\r\n                    <div className={d.MarginBSM}>\r\n                        <Input \r\n                            value={commentText} \r\n                            onChangeHandeler={(e) => setComment(e.target.value)} \r\n                            placeholder={i18.writeComment}\r\n                        />\r\n                    </div>\r\n                    <div className={d.PullRight}>\r\n                    <Button\r\n                        btnType=\"AutoWidth\" \r\n                        name=\"postComment\"\r\n                        clicked={clickHandeler}\r\n                        disabled={isDisabled}\r\n                    >\r\n                        {i18.postComment}\r\n                    </Button>\r\n\r\n                    <Button\r\n                        btnType=\"AutoWidth\" \r\n                        name=\"postComment\"\r\n                        clicked={cancle}\r\n                        classNames = {d.MarginLSM}\r\n                    >\r\n                        {i18.close}\r\n                    </Button>\r\n                    </div>\r\n                </>\r\n            }\r\n           \r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading : state.loading,\r\n        tasks : state.taskContent,\r\n        userId : state.userId\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateTaskStatus : (val, taskId, boardId) => dispatch(actionCreators.updateTaskStatus(val, taskId, boardId)),\r\n        getTaskWithComments : (taskId) => dispatch(actionCreators.getTaskWithComments(taskId)),\r\n        createComment : (taskId, createdBy, text, boardId) => dispatch(actionCreators.createComment(taskId, createdBy, text, boardId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskContent);","import React, {useState} from \"react\"; \r\nimport Card from \"../../../components/UI/Card/Card\";\r\nimport i18 from \"../../../services/i18.services\"\r\nimport d from \"../../../components/UI/index.module.css\";\r\nimport {getStatus} from \"../../../utils/utils\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport Modal from \"../../../components/UI/Modal/Modal\";\r\nimport TaskContent from \"../../TaskContent/TaskContent\"\r\n\r\n\r\nfunction Tasks({data, boardId, filterValue}) {\r\n    const [modalState, setModalState] = useState(false);\r\n    const [taskId, setTaskId] = useState(\"\");\r\n    const changeModalState = () => {\r\n        setModalState(!modalState);\r\n    }\r\n\r\n    const clickHandeler = (taskId) => {\r\n        setTaskId(taskId);\r\n        setModalState(true);\r\n    }\r\n    if (!data) {\r\n        return (\r\n            <h2>\r\n                {i18.noTasks}\r\n            </h2>\r\n        )\r\n    }\r\n    let filteredTasks = Object.keys(data);\r\n    if (+filterValue !== 0) {\r\n        filteredTasks = filteredTasks.filter(item => {\r\n            \r\n            let task = data[item];\r\n            return +task.status === (filterValue - 1);\r\n        })\r\n    }\r\n   \r\n    let tasks = filteredTasks.map(item => {\r\n        let task = data[item];\r\n        return (\r\n            <Card key={task.id}>\r\n                <h3>{task.title}</h3> \r\n                <p>{task.description}</p>\r\n                <section className={d.CardFooter}>\r\n                    <div><b>{i18.comments}: {task.commentCount}</b></div>\r\n                    <div><b>{i18.status}: {getStatus(task.status)}</b></div>\r\n                    <div>\r\n                        <Button \r\n                            btnType=\"AutoWidth\" \r\n                            name=\"viewTask\"\r\n                            clicked={(taskId) => clickHandeler(task.id)}\r\n                        >\r\n                            {i18.viewTask}\r\n                        </Button>\r\n                    </div>\r\n                </section>\r\n            </Card>\r\n        )\r\n    });\r\n    return (\r\n        <>\r\n            <Modal show={modalState} modalClosed={changeModalState}>\r\n                {taskId !== \"\" ? <TaskContent taskId={taskId} boardId={boardId} cancle={changeModalState}/> : null} \r\n            </Modal>\r\n            <section>\r\n                {filteredTasks.length ? tasks : <h1>{i18.notFoundInSelectedFilter}</h1>}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\nexport default Tasks;","import React, {useState, useEffect}from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport * as actionCreators from \"../../store/actions/actionCreators\";\r\nimport i18 from \"../../services/i18.services\";\r\nimport s from \"./Board.module.css\";\r\nimport d from \"../../components/UI/index.module.css\";\r\nimport {cn, getStatus} from \"../../utils/utils\"; \r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport CreateNewBoard from \"../../components/Board/CreateNewBoard/CreateNewBoard\";\r\nimport Tasks from \"./Tasks/Tasks\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\n\r\n\r\nfunction Board(props) {\r\n    const boardId = props.match.params.boardId;\r\n    const [modalState, setModalState] = useState(false);\r\n    const [selectvalue, setSelectValue] = useState(0);\r\n    const filter_params = getStatus();\r\n    filter_params.unshift(\"Please Select\");\r\n    \r\n    const selectHandeler = (val) => {\r\n        setSelectValue(val);\r\n        //props.updateTaskStatus(val, taskId, boardId);\r\n    }\r\n    const changeModalState = () => {\r\n        setModalState(!modalState);\r\n    }\r\n    const create = (title, description) => {\r\n        props.createTask(title, description, boardId, props.userId);\r\n        changeModalState();\r\n    }\r\n\r\n    const {getTasks} = props;\r\n\r\n    useEffect(() => {\r\n        getTasks(boardId);\r\n    }, [getTasks, boardId]);\r\n\r\n    if (boardId === \"\") {\r\n        return <Redirect to=\"/dashboard\" />;\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <section>\r\n                <h1 className={cn(d.inlineBlock, d.marginNone)}>Board : {props.boardData[boardId].title}</h1> \r\n                <div className= {cn(d.PullRight, d.inlineBlock)}>\r\n                    <span>\r\n                        {i18.filterTasks} \r\n                        <Select \r\n                            options={filter_params} \r\n                            value={selectvalue}  \r\n                            onChange={e => selectHandeler(e.target.value)}\r\n                        />\r\n                    </span>\r\n                    <Button \r\n                            btnType=\"AutoWidth\" \r\n                            name=\"createNewTask\"\r\n                            clicked={changeModalState}\r\n                            classNames={d.MarginLMD}\r\n                        >\r\n                            {i18.createNewTask}\r\n                    </Button>\r\n                </div>\r\n            </section>\r\n            <div className={s.Board}>\r\n                <Modal show={modalState} modalClosed={changeModalState}>\r\n                    <CreateNewBoard cancel={changeModalState} create={create} heading={i18.createNewTask}/>\r\n                </Modal>\r\n                {props.loading ? i18.loading : \r\n                    <Tasks data={props.tasks} boardId={boardId} filterValue={selectvalue}/> \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading : state.loading,\r\n        boardData : state.boardData,\r\n        tasks : state.tasks,\r\n        userId : state.userId\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTasks : (boardId) => dispatch(actionCreators.getTasks(boardId)),\r\n        createTask : (title, description, boardId, userId) => dispatch(actionCreators.createTask(title, description, boardId, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Layout from './hoc/Layout/Layout';\r\nimport PrivateRoute from \"./privateRoute\";\r\nimport Login from \"./containers/Login/Login\";\r\nimport Dashboard from \"./containers/Dashboard/Dashboard\";\r\nimport NotFound from \"./components/NotFound/NotFound\";\r\nimport Board from \"./containers/Board/Board\";\r\n\r\nclass App extends Component {\r\n  render () {\r\n      return (\r\n        <div>\r\n          <Layout>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Login} />\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <PrivateRoute exact path=\"/board/:boardId\" component={Board} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Layout>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;","import * as actionTypes from \"./actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    boardData : null,\r\n    tasks : null,\r\n    loading : true,\r\n    error : false,\r\n    auth : false,\r\n    userId : \"\",\r\n    userName : \"\",\r\n    authError : false,\r\n    taskContent : null\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n        switch(action.type) {\r\n\r\n            case actionTypes.AUTH_FAIL : \r\n                return {\r\n                    ...state,\r\n                    auth : false,\r\n                    authError : true\r\n                }\r\n            case actionTypes.AUTH_SUCCESS : \r\n                return {\r\n                    ...state,\r\n                    auth : true,\r\n                    userId : action.userId,\r\n                    userName : action.userName\r\n                }\r\n\r\n            case actionTypes.SET_DASHBOARD : \r\n                return {\r\n                    ...state,\r\n                    boardData : action.data,\r\n                    loading : false\r\n                }\r\n\r\n            case actionTypes.SET_TASKS : \r\n                return {\r\n                    ...state,\r\n                    tasks : action.data,\r\n                    loading : false\r\n                }\r\n\r\n            case actionTypes.SET_TASKCONTENT : \r\n                return {\r\n                    ...state,\r\n                    taskContent : action.data,\r\n                    loading : false\r\n                }\r\n            \r\n            default :\r\n                return state; \r\n        }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport reducer from \"./store/reducers\";\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter> \r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}